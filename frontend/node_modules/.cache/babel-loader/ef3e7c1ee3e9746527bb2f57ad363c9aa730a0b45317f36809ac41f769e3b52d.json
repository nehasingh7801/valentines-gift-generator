{"ast":null,"code":"var _jsxFileName = \"D:\\\\valentines gift rec\\\\frontend\\\\valentines-gift-recommendation\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './styles.css';\nimport Favicon from \"react-favicon\";\n\n// function App() {\n//     const [interest, setInterest] = useState(\"Fashion and Styling\");\n//     const [category, setCategory] = useState(1);\n//     const [personality, setPersonality] = useState(\"\");\n//     const [relationship, setRelationship] = useState(\"\");\n//     const [recommendations, setRecommendations] = useState([]);\n//     const [faviconUrl, setFaviconUrl] = useState(\n//         \"love-always-wins.png\"\n//     );\n\n//     // Simulated gift recommendations based on user input\n//     const sampleRecommendations = {\n//         \"Fashion and Styling\": [\"Adidas Originals Shorts\", \"A Black Dress\", \"Leather Jacket\"],\n//         \"Books\": [\"The Little Prince\", \"A Brief History of Time\"],\n//         \"Music\": [\"A Vinyl Record\", \"Concert Tickets\"]\n//     };\n\n//     const getRecommendations = () => {\n//         const result = sampleRecommendations[interest] || [];\n//         setRecommendations(result);\n//     };\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         getRecommendations();\n//     };\n\n//     return (\n//         <div className=\"app\">\n//             {/* Heart Favicon */}\n//             <Favicon url={faviconUrl} />\n\n//             <div className=\"content\">\n//                 <h1>Valentine's Gift Recommendation</h1>\n//                 <p>Choose your preferences:</p>\n\n//                 <form onSubmit={handleSubmit}>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"interest\">Interest:</label>\n//                         <select id=\"interest\" value={interest} onChange={(e) => setInterest(e.target.value)}>\n//                             <option value=\"Fashion and Styling\">Fashion and Styling</option>\n//                             <option value=\"Books\">Books</option>\n//                             <option value=\"Music\">Music</option>\n//                         </select>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"category\">Category:</label>\n//                         <select id=\"category\" value={category} onChange={(e) => setCategory(Number(e.target.value))}>\n//                             <option value=\"1\">1</option>\n//                             <option value=\"2\">2</option>\n//                             <option value=\"3\">3</option>\n//                             <option value=\"4\">4</option>\n//                             <option value=\"5\">5</option>\n//                         </select>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"personality\">Personality:</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"personality\"\n//                             value={personality}\n//                             onChange={(e) => setPersonality(e.target.value)}\n//                             placeholder=\"e.g. adventurous\"\n//                         />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"relationship\">Relationship Type:</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"relationship\"\n//                             value={relationship}\n//                             onChange={(e) => setRelationship(e.target.value)}\n//                             placeholder=\"e.g. extravagant\"\n//                         />\n//                     </div>\n\n//                     <button type=\"submit\">Get Recommendations</button>\n//                 </form>\n\n//                 {/* Recommended Gifts */}\n//                 <div className=\"recommendations\">\n//                     {recommendations.length > 0 ? (\n//                         <>\n//                             <h3>Recommended Gifts:</h3>\n//                             {recommendations.map((gift, index) => (\n//                                 <p key={index}>{gift}</p>\n//                             ))}\n//                         </>\n//                     ) : (\n//                         <p>No gifts found for the given preferences.</p>\n//                     )}\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default App;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [recommendations, setRecommendations] = useState([]);\n  const heartFavicon = \"love.png\"; // Heart favicon in public folder\n\n  // Generate floating hearts dynamically\n  const generateHearts = () => {\n    const heartsArray = [];\n    for (let i = 0; i < 20; i++) {\n      const size = Math.random() * 20 + 20; // Random size between 20px - 40px\n      const left = Math.random() * 100; // Random position\n      const duration = Math.random() * 5 + 5; // Different speeds\n\n      heartsArray.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heart\",\n        style: {\n          left: `${left}%`,\n          width: `${size}px`,\n          height: `${size}px`,\n          animationDuration: `${duration}s`\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this));\n    }\n    return heartsArray;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Favicon, {\n      url: heartFavicon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hearts-container\",\n      children: generateHearts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Valentine's Gift Recommendation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Choose your preferences:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lZam4mchXM3IVSCDofmT1kt1xK4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Favicon","jsxDEV","_jsxDEV","App","_s","recommendations","setRecommendations","heartFavicon","generateHearts","heartsArray","i","size","Math","random","left","duration","push","className","style","width","height","animationDuration","fileName","_jsxFileName","lineNumber","columnNumber","children","url","_c","$RefreshReg$"],"sources":["D:/valentines gift rec/frontend/valentines-gift-recommendation/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './styles.css';\nimport Favicon from \"react-favicon\";\n\n// function App() {\n//     const [interest, setInterest] = useState(\"Fashion and Styling\");\n//     const [category, setCategory] = useState(1);\n//     const [personality, setPersonality] = useState(\"\");\n//     const [relationship, setRelationship] = useState(\"\");\n//     const [recommendations, setRecommendations] = useState([]);\n//     const [faviconUrl, setFaviconUrl] = useState(\n//         \"love-always-wins.png\"\n//     );\n\n//     // Simulated gift recommendations based on user input\n//     const sampleRecommendations = {\n//         \"Fashion and Styling\": [\"Adidas Originals Shorts\", \"A Black Dress\", \"Leather Jacket\"],\n//         \"Books\": [\"The Little Prince\", \"A Brief History of Time\"],\n//         \"Music\": [\"A Vinyl Record\", \"Concert Tickets\"]\n//     };\n\n//     const getRecommendations = () => {\n//         const result = sampleRecommendations[interest] || [];\n//         setRecommendations(result);\n//     };\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         getRecommendations();\n//     };\n\n//     return (\n//         <div className=\"app\">\n//             {/* Heart Favicon */}\n//             <Favicon url={faviconUrl} />\n\n//             <div className=\"content\">\n//                 <h1>Valentine's Gift Recommendation</h1>\n//                 <p>Choose your preferences:</p>\n\n//                 <form onSubmit={handleSubmit}>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"interest\">Interest:</label>\n//                         <select id=\"interest\" value={interest} onChange={(e) => setInterest(e.target.value)}>\n//                             <option value=\"Fashion and Styling\">Fashion and Styling</option>\n//                             <option value=\"Books\">Books</option>\n//                             <option value=\"Music\">Music</option>\n//                         </select>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"category\">Category:</label>\n//                         <select id=\"category\" value={category} onChange={(e) => setCategory(Number(e.target.value))}>\n//                             <option value=\"1\">1</option>\n//                             <option value=\"2\">2</option>\n//                             <option value=\"3\">3</option>\n//                             <option value=\"4\">4</option>\n//                             <option value=\"5\">5</option>\n//                         </select>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"personality\">Personality:</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"personality\"\n//                             value={personality}\n//                             onChange={(e) => setPersonality(e.target.value)}\n//                             placeholder=\"e.g. adventurous\"\n//                         />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"relationship\">Relationship Type:</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"relationship\"\n//                             value={relationship}\n//                             onChange={(e) => setRelationship(e.target.value)}\n//                             placeholder=\"e.g. extravagant\"\n//                         />\n//                     </div>\n\n//                     <button type=\"submit\">Get Recommendations</button>\n//                 </form>\n\n//                 {/* Recommended Gifts */}\n//                 <div className=\"recommendations\">\n//                     {recommendations.length > 0 ? (\n//                         <>\n//                             <h3>Recommended Gifts:</h3>\n//                             {recommendations.map((gift, index) => (\n//                                 <p key={index}>{gift}</p>\n//                             ))}\n//                         </>\n//                     ) : (\n//                         <p>No gifts found for the given preferences.</p>\n//                     )}\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default App;\n\nfunction App() {\n  const [recommendations, setRecommendations] = useState([]);\n  const heartFavicon = \"love.png\"; // Heart favicon in public folder\n\n  // Generate floating hearts dynamically\n  const generateHearts = () => {\n    const heartsArray = [];\n    for (let i = 0; i < 20; i++) {\n      const size = Math.random() * 20 + 20; // Random size between 20px - 40px\n      const left = Math.random() * 100; // Random position\n      const duration = Math.random() * 5 + 5; // Different speeds\n\n      heartsArray.push(\n        <div\n          key={i}\n          className=\"heart\"\n          style={{\n            left: `${left}%`,\n            width: `${size}px`,\n            height: `${size}px`,\n            animationDuration: `${duration}s`\n          }}\n        ></div>\n      );\n    }\n    return heartsArray;\n  };\n\n  return (\n    <div className=\"app\">\n      <Favicon url={heartFavicon} />\n      <div className=\"hearts-container\">{generateHearts()}</div>\n\n      {/* Form Content */}\n      <div className=\"content\">\n        <h1>Valentine's Gift Recommendation</h1>\n        <p>Choose your preferences:</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AACrB,OAAOC,OAAO,MAAM,eAAe;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMQ,YAAY,GAAG,UAAU,CAAC,CAAC;;EAEjC;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,WAAW,GAAG,EAAE;IACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3B,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MACtC,MAAMC,IAAI,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;MAClC,MAAME,QAAQ,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;MAExCJ,WAAW,CAACO,IAAI,cACdd,OAAA;QAEEe,SAAS,EAAC,OAAO;QACjBC,KAAK,EAAE;UACLJ,IAAI,EAAE,GAAGA,IAAI,GAAG;UAChBK,KAAK,EAAE,GAAGR,IAAI,IAAI;UAClBS,MAAM,EAAE,GAAGT,IAAI,IAAI;UACnBU,iBAAiB,EAAE,GAAGN,QAAQ;QAChC;MAAE,GAPGL,CAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQF,CACR,CAAC;IACH;IACA,OAAOhB,WAAW;EACpB,CAAC;EAED,oBACEP,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAS,QAAA,gBAClBxB,OAAA,CAACF,OAAO;MAAC2B,GAAG,EAAEpB;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BvB,OAAA;MAAKe,SAAS,EAAC,kBAAkB;MAAAS,QAAA,EAAElB,cAAc,CAAC;IAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAG1DvB,OAAA;MAAKe,SAAS,EAAC,SAAS;MAAAS,QAAA,gBACtBxB,OAAA;QAAAwB,QAAA,EAAI;MAA+B;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCvB,OAAA;QAAAwB,QAAA,EAAG;MAAwB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CAxCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}